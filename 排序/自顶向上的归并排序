public class Merge {
	Comparable[] copy_a;
	public void sort(Comparable[] a) {
		copy_a = new Comparable[a.length];
		for (int i = 0; i < a.length; i++) {
			copy_a[i] = a[i];
		}
		sort(a, 0, a.length-1);
	}
	public void sort(Comparable[] a, int lo, int hi) {
		if(lo>=hi) return;
		int mid = (lo+hi)/2;
		sort(a,lo,mid);//左排序
		sort(a,mid+1,hi);//右排序
		merge(a,lo,mid,hi);
	}
	private void merge(Comparable[]a, int lo,int mid,int hi) {
		int i = lo;
		int j =mid+1;
		
		for (int k = lo; k < hi; k++) {
			if(i>mid)
				a[k] = copy_a[j++];
			else if(j>hi)
				a[k] = copy_a[i++];
			else if(copy_a[i].compareTo(copy_a[j])>0)
				a[k] = copy_a[j++];
			else
				a[k] = copy_a[i++];
		}
	}

}
