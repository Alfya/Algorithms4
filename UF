//union-find算法

public class UF {
	private int[] id;
	private int count;
	
	public UF(int N) {
		count = N;
		id = new int[N];
		for (int i = 0; i < id.length; i++) {
			id[i] = i;
		}
	}
	public int count() {
		return count;
	}
	public void union(int p, int q) {
		int RootP = find(p);
		int RootQ = find(q);
		if(RootP==RootQ) return;
		id[RootP] = RootQ;
		count--;
	}
	public int find(int p) {
		while(p!=id[p]) {
			id[p] = id[id[p]];
			p = id[p];
		}
		return p;
	}
	public boolean isConnected(int p, int q) {
		return find(p)==find(q);
	}
}
